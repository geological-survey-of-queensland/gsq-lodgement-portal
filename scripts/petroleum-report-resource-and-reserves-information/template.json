{
	"version": "1.0",
	"Last updated date": "24/06/2024",
	"Last updated by": "S Bowden, GSQ",
	"ReportType": "http://linked.data.gov.au/def/georesource-report/petroleum-report-resource-and-reserves-information",
	"NamingConvention": {
		"bypassNamingValidation":true,
		"xlsxRegexSingleSite": "(?i)^.+_data-submission-template-petroleum_\\d{4}$",
		"xlsxRegexMultiSite": "^.*$",
		"xlsxLabelSingleSite": "MineName_data-submission-template-petroleum_[End Data Year(YYYY)]",
		"xlsxLabelMultiSite": "filename not controlled",
		"csvRegexSingleSite": "(?i)^.+_data-submission-template-petroleum_\\d{4}_.+$",
		"csvLabelSingleSite": "MineName_data-submission-template-petroleum_[End Data Year(YYYY)]_ComponentID",
		"csvRegexMultiSite": "^.*_.*$",
		"csvLabelMultiSite": "your-filename_ComponentID"
	},
	"DocumentProperties": {
		"FileName": "{0}_reserves_and_resources_statistics_FY-{1}-submitted.xlsx",
		"DocumentTitle": "{0} RESOURCES AND RESERVES STATISTICS AS AT {1}",
		"DocumentDescription": "Associated data submission to {0}",
		"ThemeVocabUri": "http://linked.data.gov.au/def/gsq-dataset-theme/resource-statistics",
		"EarthScienceCategoryVocabUri": "http://linked.data.gov.au/def/earth-science-data-category/reservoir-engineering"
	},
    "MetadataMapping": {
		"RelatedPermitComponent": "RESERVE_AND_RESOURCE",
		"RelatedPermitTypeColumn": "LEASE_NAME",
		"RelatedPermitNumberColumn": "LEASE_NUM",
		"RelatedPermitIsBulkLoad": true
	  },
	"components": [
		{
			"name": "RESERVE_AND_RESOURCE",
			"requiredForFileUpload": false,
			"webFormPreloadIgnore": false,
			"webFormKey": "permit",
			"xlsxOffsets": {
				"columnOffset": 2,
				"rowOffset": 8
			},
			"minRows": 1,
			"inputs": [
				{
					"name": "permitType",
					"label": "LEASE_NAME",
					"columnHeader": "LEASE_NAME",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Lease type is required"
								]
							},
							{
								"name": "vocab",
								"isComplex": true,
								"params": [
									"PREFIX skos: <http://www.w3.org/2004/02/skos/core#> SELECT DISTINCT ?id ?displayText WHERE {{ ?id a skos:Concept ; skos:notation ?displayText ; skos:inScheme <http://linked.data.gov.au/def/qld-resource-permit> }} ORDER BY LCASE(?displayText)",
									"Permit Type is not valid. Refer to vocab Queensland Resource Permit."
								]
							}
						]
					}
				},
				{
					"name": "permitNumber",
					"label": "LEASE_NUM",
					"columnHeader": "LEASE_NUM",
					"isRequired": true,
					"type": "integer",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Lease Number is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,4}$/",
									"Lease Number must be a number up to 4 digits in length."
								]
							},
							{
								"name": "grouping",
								"isComplex": true,
								"params": [
									"LEASE_NAME",
									"Invalid grouping for Permit number {0}. For a Permit number, the following fields must be the same for all rows in that group: LEASE_NAME, LEASE_NUM"
								]
							}
						]
					}
				},
				{
					"name": "FIELD_NAME",
					"label": "FIELD_NAME",
					"columnHeader": "FIELD_NAME",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Field name is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Field name cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "REPORTING_YEAR",
					"label": "REPORTING_YEAR",
					"columnHeader": "REPORTING_YEAR",
					"isRequired": true,
					"type": "integer",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Reporting year is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^20\\d\\d$/",
									"Reporting year must be between the years 2000-2099"
								]
							}
						]
					}
				},
				{
					"name": "EFFECTIVE_DATE",
					"label": "EFFECTIVE_DATE",
					"columnHeader": "EFFECTIVE_DATE",
					"isRequired": true,
					"type": "calender",
					"validations": {
						"type": "date",
						"rules": [
							{
								"name": "required",
								"params": [
									"Effective date is required"
								]
							}
						]
					}
				},
				{
					"name": "RESERVOIR_UNIT_CLASS",
					"label": "RESERVOIR_UNIT_CLASS",
					"columnHeader": "RESERVOIR_UNIT_CLASS",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Reservoir unit class is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Reservoir unit name cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "PDEN_PRODUCT_TYPE",
					"label": "PDEN_PRODUCT_TYPE",
					"columnHeader": "PDEN_PRODUCT_TYPE",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Petroleum product type is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Petroleum product type cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "SALES_UNIT",
					"label": "SALES_UNIT",
					"columnHeader": "SALES_UNIT",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Sales unit is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Sales unit cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "1P_DEVELOPED",
					"label": "1P_DEVELOPED",
					"columnHeader": "1P_DEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"1P developed volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"1P developed volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "1P_UNDEVELOPED",
					"label": "1P_UNDEVELOPED",
					"columnHeader": "1P_UNDEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"1P undeveloped volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"1P undeveloped volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "1P_TOTAL",
					"label": "1P_TOTAL",
					"columnHeader": "1P_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"1P total volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"1P total volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2P_DEVELOPED",
					"label": "2P_DEVELOPED",
					"columnHeader": "2P_DEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P developed volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"2P developed volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2P_UNDEVELOPED",
					"label": "2P_UNDEVELOPED",
					"columnHeader": "2P_UNDEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P undeveloped volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"2P undeveloped volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2P_TOTAL",
					"label": "2P_TOTAL",
					"columnHeader": "2P_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P total volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"2P total volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "3P_DEVELOPED",
					"label": "3P_DEVELOPED",
					"columnHeader": "3P_DEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"3P developed volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"3P developed volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "3P_UNDEVELOPED",
					"label": "3P_UNDEVELOPED",
					"columnHeader": "3P_UNDEVELOPED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"3P undeveloped volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"3P undeveloped volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "3P_TOTAL",
					"label": "3P_TOTAL",
					"columnHeader": "3P_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"3P total volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"3P total volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2C_TOTAL",
					"label": "2C_TOTAL",
					"columnHeader": "2C_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2C total volume is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^\\d{1,10}(\\.\\d+)?$/",
									"2C total volume must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "VOLUME_METHOD",
					"label": "VOLUME_METHOD",
					"columnHeader": "VOLUME_METHOD",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									128,
									"Volume method cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "REMARK",
					"label": "REMARK",
					"columnHeader": "REMARK",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									2000,
									"Remark cannot be more than 2000 characters"
								]
							}
						]
					}
				}
			]
		},
		{
			"name": "2P_MOVEMENT",
			"requiredForFileUpload": false,
			"webFormPreloadIgnore": false,
			"webFormKey": "2pMovement",
			"xlsxOffsets": {
				"columnOffset": 2,
				"rowOffset": 8
			},
			"inputs": [
				{
					"name": "BASIN",
					"label": "BASIN",
					"columnHeader": "BASIN",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Basin is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Basin cannot be more than 128 characters"
								]
							}
						]
					}
				},				
				{
					"name": "FIELD_NAME",
					"label": "FIELD_NAME",
					"columnHeader": "FIELD_NAME",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									128,
									"Field name cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "REPORTING_YEAR",
					"label": "REPORTING_YEAR",
					"columnHeader": "REPORTING_YEAR",
					"isRequired": true,
					"type": "integer",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Reporting year is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^20\\d\\d$/",
									"Reporting year must be between the years 2000-2099"
								]
							}
						]
					}
				},
				{
					"name": "EFFECTIVE_DATE",
					"label": "EFFECTIVE_DATE",
					"columnHeader": "EFFECTIVE_DATE",
					"isRequired": true,
					"type": "calender",
					"validations": {
						"type": "date",
						"rules": [
							{
								"name": "required",
								"params": [
									"Effective date is required"
								]
							}
						]
					}
				},
				{
					"name": "PDEN_PRODUCT_TYPE",
					"label": "PDEN_PRODUCT_TYPE",
					"columnHeader": "PDEN_PRODUCT_TYPE",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Petroleum product type is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Petroleum product type cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "SALES_UNIT",
					"label": "SALES_UNIT",
					"columnHeader": "SALES_UNIT",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Sales unit is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Sales unit cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "PRODUCTION_TOTAL",
					"label": "PRODUCTION_TOTAL",
					"columnHeader": "PRODUCTION_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Production total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Production total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "EXTENSION_TOTAL",
					"label": "EXTENSION_TOTAL",
					"columnHeader": "EXTENSION_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Extension total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Extension total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "UPGRADE_TOTAL",
					"label": "UPGRADE_TOTAL",
					"columnHeader": "UPGRADE_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Upgrade total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Upgrade total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "DOWNGRADE_TOTAL",
					"label": "DOWNGRADE_TOTAL",
					"columnHeader": "DOWNGRADE_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Downgrade total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Downgrade total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "OTHER_TOTAL",
					"label": "OTHER_TOTAL",
					"columnHeader": "OTHER_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Other total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Other total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "CLOSE_BALANCE_TOTAL",
					"label": "CLOSE_BALANCE_TOTAL",
					"columnHeader": "CLOSE_BALANCE_TOTAL",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Close balance total is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"Close balance total must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "REMARK",
					"label": "REMARK",
					"columnHeader": "REMARK",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									2000,
									"Remark cannot be more than 2000 characters"
								]
							}
						]
					}
				}
			]
		},
		{
			"name": "2P2C_MATURITY",
			"requiredForFileUpload": false,
			"webFormPreloadIgnore": false,
			"webFormKey": "2p2cMaturity",
			"xlsxOffsets": {
				"columnOffset": 2,
				"rowOffset": 8
			},
			"inputs": [
				{
					"name": "FIELD_NAME",
					"label": "FIELD_NAME",
					"columnHeader": "FIELD_NAME",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									128,
									"Field name cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "BASIN",
					"label": "BASIN",
					"columnHeader": "BASIN",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Basin is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Basin cannot be more than 128 characters"
								]
							}
						]
					}
				},				{
					"name": "REPORTING_YEAR",
					"label": "REPORTING_YEAR",
					"columnHeader": "REPORTING_YEAR",
					"isRequired": true,
					"type": "integer",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Reporting year is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^20\\d\\d$/",
									"Reporting year must be between the years 2000-2099"
								]
							}
						]
					}
				},
				{
					"name": "EFFECTIVE_DATE",
					"label": "EFFECTIVE_DATE",
					"columnHeader": "EFFECTIVE_DATE",
					"isRequired": true,
					"type": "calender",
					"validations": {
						"type": "date",
						"rules": [
							{
								"name": "required",
								"params": [
									"Effective date is required"
								]
							}
						]
					}
				},
				{
					"name": "PDEN_PRODUCT_TYPE",
					"label": "PDEN_PRODUCT_TYPE",
					"columnHeader": "PDEN_PRODUCT_TYPE",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Petroleum product type is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Petroleum product type cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "SALES_UNIT",
					"label": "SALES_UNIT",
					"columnHeader": "SALES_UNIT",
					"isRequired": true,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"Sales unit is required"
								]
							},
							{
								"name": "max",
								"params": [
									128,
									"Sales unit cannot be more than 128 characters"
								]
							}
						]
					}
				},
				{
					"name": "2P_PRODUCTION",
					"label": "2P_PRODUCTION",
					"columnHeader": "2P_PRODUCTION",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P Production is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2P production must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2P_APPROVED",
					"label": "2P_APPROVED",
					"columnHeader": "2P_APPROVED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P approved is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2P approved must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2P_JUSTIFIED",
					"label": "2P_JUSTIFIED",
					"columnHeader": "2P_JUSTIFIED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2P justified is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2P justified must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2C_PENDING",
					"label": "2C_PENDING",
					"columnHeader": "2C_PENDING",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2C pending is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2C pending must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2C_ON_HOLD",
					"label": "2C_ON_HOLD",
					"columnHeader": "2C_ON_HOLD",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2C on hold is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2C on hold must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2C_UNCLARIFIED",
					"label": "2C_UNCLARIFIED",
					"columnHeader": "2C_UNCLARIFIED",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2C unclarified is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2C unclarified must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "2C_UNVIABLE",
					"label": "2C_UNVIABLE",
					"columnHeader": "2C_UNVIABLE",
					"isRequired": true,
					"type": "float",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "required",
								"params": [
									"2C unviable is required"
								]
							},
							{
								"name": "matches",
								"isComplex": true,
								"params": [
									"/^-?\\d{1,10}(\\.\\d+)?$/",
									"2C unviable must be a decimal, with no more than 10 digits before the decimal point e.g. 1234567890.1234"
								]
							}
						]
					}
				},
				{
					"name": "REMARK",
					"label": "REMARK",
					"columnHeader": "REMARK",
					"isRequired": false,
					"type": "text",
					"validations": {
						"type": "string",
						"rules": [
							{
								"name": "max",
								"params": [
									2000,
									"Remark cannot be more than 2000 characters"
								]
							}
						]
					}
				}
			]
		}
	]
}
